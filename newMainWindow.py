# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'newMainWindow.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import wmi
import MyVirtualKeyboard
import Blink
import voice
import threading
import SettingsWindow
import CalibWindow
from PyQt5 import QtCore, QtWidgets
from PyQt5.QtCore import Qt,QThread,pyqtSignal
from functools import partial
from PyQt5.QtWidgets import QDialog
import sys
import warnings
import ctypes
import cv2 as cv
Camera_id=[0]
Calib=[6,4]
user32 = ctypes.windll.user32
screensize = [user32.GetSystemMetrics(0), user32.GetSystemMetrics(1)]

warnings.simplefilter('ignore')
class MainWindow(QDialog):

    def __init__(self):
        super(MainWindow, self).__init__()
        # Dialog = QtWidgets.QDialog()
        self.ui = Ui_Dialog()
        self.ui.setupUi(self)

    def keyPressEvent(self, event):
        if(event.key()==Qt.Key_F1):
            self.ui.Start(self)
        if(event.key()==Qt.Key_F2):
            print('it workes')
            self.ui.Settings()
        if(event.key()==Qt.Key_F3):
            self.ui.Calib()
class Ui_Dialog(object):


    def setupUi(self, Dialog):
        Dialog.setObjectName("Dialog")
        Dialog.resize(873, 600)
        Dialog.setMouseTracking(False)
        Dialog.setAcceptDrops(False)
        Dialog.setAutoFillBackground(False)
        Dialog.setStyleSheet("background: rgb(37,56,62);")
        Dialog.setSizeGripEnabled(True)
        Dialog.setModal(False)
        self.language=['en']
        self.pushButton = QtWidgets.QPushButton(Dialog)
        self.pushButton.setGeometry(QtCore.QRect(80, 180, 251, 51))
        self.pushButton.setStyleSheet("QPushButton {\n"
"    background-color: #ffffff;\n"
"    border: 2px solid #555;\n"
"    border-radius: 20px;\n"
"    border-style: outset;\n"
"    color: rgb(37,56,62);\n"
"     font: 12pt;\n"
"    }\n"
"")
        self.pushButton.setObjectName("pushButton")
        self.pushButton_2 = QtWidgets.QPushButton(Dialog)
        self.pushButton_2.setGeometry(QtCore.QRect(80, 280, 251, 51))
        self.pushButton_2.setStyleSheet("QPushButton {\n"
"    background-color: #ffffff;\n"
"    border: 2px solid #555;\n"
"    border-radius: 20px;\n"
"    border-style: outset;\n"
"   color: rgb(37,56,62);\n"
"     font: 12pt;\n"
"    }")
        self.pushButton_2.setObjectName("pushButton_2")
        self.pushButton_3 = QtWidgets.QPushButton(Dialog)
        self.pushButton_3.setGeometry(QtCore.QRect(80, 380, 251, 51))
        self.pushButton_3.setStyleSheet("QPushButton {\n"
"    background-color: #ffffff;\n"
"    border: 2px solid #555;\n"
"    border-radius: 20px;\n"
"    border-style: outset;\n"
"     color: rgb(37,56,62);\n"
"     font: 12pt;\n"
"    }")
        self.pushButton_3.setObjectName("pushButton_3")
        self.label = QtWidgets.QLabel(Dialog)
        self.label.setGeometry(QtCore.QRect(10, 70, 401, 71))
        self.label.setStyleSheet("color:rgb(255, 255, 255);\n"
"font: 18pt \"Perpetua\";")
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(Dialog)
        self.label_2.setGeometry(QtCore.QRect(10, 630, 261, 41))
        self.label_2.setStyleSheet("\n"
"font: 16pt \"Perpetua\";\n"
"color : rgb(255,255,255);")
        self.label_2.setObjectName("label_2")
        self.pushButton_4 = QtWidgets.QPushButton(Dialog)
        self.pushButton_4.setGeometry(QtCore.QRect(80, 480, 251, 51))
        self.pushButton_4.setStyleSheet("QPushButton {\n"
"    background-color: #ffffff;\n"
"    border: 2px solid #555;\n"
"    border-radius: 20px;\n"
"    border-style: outset;\n"
"color: rgb(37,56,62);\n"
"     font: 12pt;\n"
" \n"
"    }")
        self.pushButton_4.setObjectName("pushButton_4")

        self.label_3 = QtWidgets.QLabel(Dialog)
        self.label_3.setGeometry(QtCore.QRect(440, 0, 441, 711))
        self.label_3.setStyleSheet("background:rgb(255,255,255);")
        self.label_3.setText("")
        self.label_3.setObjectName("label_3")
        self.graphicsView_2 = QtWidgets.QGraphicsView(Dialog)
        self.graphicsView_2.setGeometry(QtCore.QRect(470, 130, 381, 421))
        self.graphicsView_2.setStyleSheet("border-image:url(eye.jpg);")
        self.graphicsView_2.setObjectName("graphicsView_2")

        self.retranslateUi(Dialog)
        QtCore.QMetaObject.connectSlotsByName(Dialog)

    def Start(self,Dialog):
        cam = cv.VideoCapture(Camera_id[0])

        Ttrack = threading.Thread(target=Blink.start, args=[cam, screensize])
        Ttrack.start()

        Dialog.hide()
        self.thread = QThread()
        self.keyboardWorker = MyVirtualKeyboard.PyKeyboard()

        self.keyboardWorker.moveToThread(self.thread)
        self.thread.started.connect(self.keyboardWorker.run)
        self.keyboardWorker.finished.connect(self.thread.quit)
        self.keyboardWorker.finished.connect(self.keyboardWorker.deleteLater)
        self.thread.finished.connect(self.thread.deleteLater)
        self.thread.start()

    def Calib(self):
        self.thread = QThread()
        self.CalibrWorker = CalibWindow.Calib(Camera_id[0],Calib,screensize)
        self.CalibrWorker.moveToThread(self.thread)
        self.thread.started.connect(self.CalibrWorker.run)
        self.CalibrWorker.finished.connect(self.thread.quit)
        self.CalibrWorker.finished.connect(self.CalibrWorker.deleteLater)
        self.thread.finished.connect(self.thread.deleteLater)
        self.thread.start()

    def Settings(self):

        self.thread = QThread()
        self.SettingsWorker = SettingsWindow.Settings(language, 0, Calib, 0, 1, Camera_id, 0, screensize, 0, 1)
        self.SettingsWorker.moveToThread(self.thread)
        self.thread.started.connect(self.SettingsWorker.run)
        self.SettingsWorker.finished.connect(self.thread.quit)
        self.SettingsWorker.finished.connect(self.SettingsWorker.deleteLater)
        self.thread.finished.connect(self.on_finished)
        self.thread.start()
    def on_finished(self):
        print('hello')
        Tvoice = threading.Thread(target=voice.voice_rec, args={language[0]})
        Tvoice.start()

        # Final resets

        # Tsettings.join()
    def retranslateUi(self, Dialog):
        _translate = QtCore.QCoreApplication.translate
        Dialog.setWindowTitle(_translate("Dialog", "MainWindow"))

        # Dialog.setFocusPolicy(Qt.StrongFocus)
        # Dialog.showNormal()
        self.pushButton.setText(_translate("Dialog", "start"))
        self.pushButton.setFocusPolicy(Qt.NoFocus)
        self.pushButton.clicked.connect(partial(self.Start,Dialog))
        self.pushButton_2.setText(_translate("Dialog", "new calibration"))
        self.pushButton_2.setFocusPolicy(Qt.NoFocus)
        self.pushButton_2.clicked.connect(self.Calib)
        self.pushButton_3.setText(_translate("Dialog", "settings"))
        self.pushButton_3.clicked.connect(self.Settings)
        self.pushButton_3.setFocusPolicy(Qt.NoFocus)
        self.pushButton_4.setFocusPolicy(Qt.NoFocus)
        self.label.setText(_translate("Dialog", "Mouse control with eyes movement:"))
        self.label_2.setText(_translate("Dialog", "our social media accounts:"))
        self.pushButton_4.setText(_translate("Dialog", "help"))


if __name__ == "__main__":
    language=['en']

    Tvoice = threading.Thread(target=voice.voice_rec, args={language[0]})
    Tvoice.start()
    app2 = QtWidgets.QApplication(sys.argv)
    # Dialog = QtWidgets.QDialog()
    # ui = Ui_Dialog()
    # ui.setupUi(Dialog)
    # Dialog.show()t
    window=MainWindow()
    window.show()
    sys.exit(app2.exec_())
